{
  "name": "frontend",
  "version": "0.1.0",
  "description": "Frontend for SES Application",
  "author": "AJ Barea",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack -p 3000",
    "build": "next build && npm run postexport",
    "start": "next start -p 3000",
    "lint": "next lint",
    "build:backend": "cd ../backend && bash build_backend.sh && cd ../frontend",
    "electron:dev": "npm run build:backend && concurrently \"npm:dev\" \"wait-on http://localhost:3000 && cross-env ELECTRON_START_URL=http://localhost:3000 electron .\"",
    "electron:build": "npm run build:backend && npm run build && cross-env NODE_ENV=production CSC_IDENTITY_AUTO_DISCOVERY=false electron-builder --win",
    "postinstall": "electron-builder install-app-deps",
    "postexport": "node ./scripts/post-export.js"
  },
  "dependencies": {
    "lightningcss": "^1.30.1",
    "lightningcss-win32-x64-msvc": "^1.30.1",
    "next": "15.3.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-spinners": "^0.17.0",
    "tailwindcss": "^4.1.8",
    "swr": "^2.2.5"
  },
  "devDependencies": {
    "@tailwindcss/oxide-win32-x64-msvc": "^4.1.8",
    "@tailwindcss/postcss": "^4",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "typescript": "^5",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "electron": "^31.0.2",
    "electron-builder": "^24.13.3",
    "wait-on": "^7.2.0",
    "glob": "^10.3.10"
  },
  "main": "main.js",
  "build": {
    "appId": "com.example.sesapp",
    "productName": "SES",
    "files": [
      "main.js",
      "package.json",
      {
        "from": "out",
        "to": "out",
        "filter": [
          "**/*"
        ]
      }
    ],
    "extraResources": [
      {
        "from": "../backend/dist/ses_backend",
        "to": "dist_backend",
        "filter": [
          "**/*"
        ]
      }
    ],
    "asarUnpack": [
      "**/dist_backend/**",
      "**/.next/server/pages/**"
    ],
    "win": {
      "target": "nsis",
      "sign": null,
      "icon": "build/icon.ico",
      "signAndEditExecutable": true
    },
    "mac": {
      "target": "dmg"
    },
    "linux": {
      "target": "AppImage"
    },
    "directories": {
      "output": "dist_electron"
    }
  }
}
